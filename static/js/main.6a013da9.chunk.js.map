{"version":3,"sources":["reportWebVitals.js","MyComponents/Navbar.js","MyComponents/TextBlock.js","MyComponents/Alerts.js","MyComponents/About.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","props","changeTitle","e","document","title","target","innerHTML","className","mode","navbar","nav","type","id","to","onClick","onToggle","navbtnStyle","htmlFor","navbtn","TextBlock","output","o","getElementById","useState","text","setText","style","textBlock","hColor","placeholder","onChange","value","rows","newText","toUpperCase","toLowerCase","arr","split","index","length","replace","charAt","join","c","trim","block","navigator","clipboard","writeText","alert","Alerts","typ","role","msg","About","defaultProps","App","setAlert","showAlert","message","setTimeout","navStyle","setMode","body","backgroundColor","path","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a013da9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    const changeTitle = (e) =>{\n        document.title = `Text Utils ${e.target.innerHTML===\"Text Utils\"?'':' - '+e.target.innerHTML}`\n    }\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode.navbar.nav} bg-${props.mode.navbar.nav}`}>\n            <div className=\"container-fluid\">\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n                    <Link className=\"navbar-brand\" to=\"/my-app\" onClick={changeTitle}>{props.title}</Link>\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        {/* <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\" >Home</a>\n                        </li> */}\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/my-app/about\" onClick={changeTitle}>About</Link>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"form-check form-switch\">\n                    <input className=\"form-check-input\"  type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.onToggle} />\n                    <label className={`form-check-label text-${props.mode.navbar.navbtnStyle}`} htmlFor=\"flexSwitchCheckDefault\">{props.mode.navbar.navbtn} Mode</label>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string,\n}\n\nNavbar.defaultProps = {\n    title: \"Set here\",\n}\n","import { useState } from \"react\";\nimport React from 'react'\n\nexport default function TextBlock(props) {\n\n    const output = (o) => {\n        let block = document.getElementById('value');\n        block.innerHTML = o;\n    }\n\n    let handleChange = (e) => {\n        setText(e.target.value);\n    }\n\n    let upper = () => {\n        let newText = text.toUpperCase();\n        output(newText);\n    }\n\n    let lower = () => {\n        let newText = text.toLowerCase();\n        output(newText);\n    }\n\n    let copy = () => {\n        let block = document.getElementById('value');\n        navigator.clipboard.writeText(block.innerHTML);\n        props.alert(\"Copied to clipboard\", 'success');\n    }\n\n    let clear = () => {\n        document.getElementById('exampleFormControlTextarea1').value = '';\n        document.getElementById('value').innerHTML = null;\n        setText(\"\");\n    }\n\n    const titleCase = () => {\n        let arr = text.split(\" \");\n        for (let index = 0; index < arr.length; index++) {\n            arr[index] = arr[index].replace(arr[index].charAt(0), arr[index].charAt(0).toUpperCase());\n        }\n        output(arr.join(\" \"));\n    }\n\n    const sentenceCase = () => {\n        let c = text.toLowerCase();\n        let arr = c.split(\". \");\n        for (let index = 0; index < arr.length; index++) {\n            arr[index] = arr[index].replace(arr[index].charAt(0), arr[index].charAt(0).toUpperCase());\n        }\n        c = arr.join(\". \");\n        c = c.trim();\n        output(c);\n    }\n\n    const [text, setText] = useState(\"\");\n\n    return (\n        <>\n            <div className=\"mb-3 my-3\">\n                <h3 className={`text-${props.style.textBlock.hColor}`}>Enter the Text here for analysis..</h3>\n                <textarea className=\"form-control\" placeholder=\"Enter the text...\" onChange={handleChange} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={upper}>All Upper</button>\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={lower}>All Lower</button>\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={titleCase}>Title Case</button>\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={sentenceCase}>Sentence Case</button>\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={copy}>Copy</button>\n                <button className=\"btn btn-primary my-3 mx-2\" onClick={clear}>Clear</button>\n            </div>\n            <h2 className={`text-${props.style.textBlock.hColor}`}>Output</h2>\n            <div className=\"container border bg-dark text-light\">\n                {text.trim().length === 0 ? 0 : text.trim().split(' ').length} words {text.length} characters\n                <pre id=\"value\"></pre>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alerts(props) {\n\n    return (\n        props.alert &&\n        <div className=\"container\">\n            <div className={`alert alert-${props.alert.typ} alert-dismissible fade show container my-3`} role=\"alert\">\n                <strong>{props.alert.typ}</strong> {props.alert.msg}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function About(props) {\n    return (\n        <div className={`container my-4 text-${props.mode.navbar.navbtnStyle} text-center`}>\n            <h2>Hello, I am Krishna nickname kai.</h2>\n            <h2>I was build this application on 22,August 2021.</h2>\n            <h2>Currently I am pursing by B.Tech degree from university ccsu, meerut.</h2>\n        </div>\n    )\n}\n","import Navbar from \"./MyComponents/Navbar\";\nimport TextBlock from \"./MyComponents/TextBlock\";\nimport React, { useState } from 'react';\nimport Alerts from \"./MyComponents/Alerts\";\nimport About from \"./MyComponents/About\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nfunction App() {\n\n    // <---------------------------- alert fuctionality ------------------------------------------>\n\n    const [alert, setAlert] = useState(null);\n\n    const showAlert = (message, type) => {\n        setAlert({\n            msg: message,\n            typ: type,\n        });\n        setTimeout(() => {\n            setAlert(null);\n        }, 1500);\n    }\n\n    // <------------------------------------------------------------------------------------------>\n\n    //<--------------------------- Dark mode functionality --------------------------------------->\n\n    const [mode, setMode] = useState({\n        navbar: {\n            nav: 'light',\n            navStyle: 'grey',\n            navbtn: 'Dark',\n        },\n        textBlock: {\n            hColor: 'Dark',\n        }\n    });\n\n    let darkMode = () => {\n        if (mode.navbar.nav === 'light') {\n            setMode({\n                navbar: {\n                    nav: 'dark',\n                    navbtn: 'Light',\n                    navbtnStyle: 'light'\n                },\n                textBlock: {\n                    hColor: 'light',\n                }\n            });\n            document.body.style.backgroundColor = '#111869';\n            showAlert(\"Dark Mode Enable\", \"success\");\n        }\n        else {\n            setMode({\n                navbar: {\n                    nav: 'light',\n                    navStyle: 'grey',\n                    navbtn: 'Dark',\n                    navbtnStyle: '',\n                },\n                textBlock: {\n                    hColor: 'Dark',\n                }\n            });\n            document.body.style.backgroundColor = 'wheat';\n            showAlert(\"Light Mode Enable\", \"success\");\n        }\n    }\n\n    // <--------------------------------------------------------------------------------------------------->\n\n    return (\n        <Router>\n            <Navbar title=\"Text Utils\" mode={mode} onToggle={darkMode} />\n            <Alerts alert={alert} />\n            <Switch>\n                <Route path=\"/my-app\">\n                    <div className=\"container\">\n                        <TextBlock style={mode} alert={showAlert} />\n                    </div>\n                </Route>\n                <Route exact path=\"/my-app/about\">\n                    <About mode={mode} />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}